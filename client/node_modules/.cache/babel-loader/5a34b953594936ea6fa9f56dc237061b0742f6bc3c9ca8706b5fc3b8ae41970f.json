{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dillo\\\\Documents\\\\CodingPC\\\\HouseApp\\\\client\\\\src\\\\components\\\\productComp\\\\editProduct.js\",\n  _s = $RefreshSig$();\n//Imports\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\n//Edit Stock Form Function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditProduct() {\n  _s();\n  const [prodForm, setProdForm] = useState({\n    productDesc: \"\",\n    productCat: \"\",\n    product: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  const [categoryList, setCategoryList] = useState([]);\n  useEffect(() => {\n    async function fetchCategoryList() {\n      try {\n        const response = await fetch(\"http://localhost:5050/categoryDB/categoryList\");\n        if (response.ok) {\n          const categories = await response.json();\n          setCategoryList(categories);\n        } else {\n          console.error(\"Failed to fetch product list\");\n        }\n      } catch (error) {\n        console.error(\"An error occurred while fetching product list:\", error);\n      }\n    }\n    fetchCategoryList();\n  }, []);\n\n  //Retrieves InventoryItem from DB or return err\n  useEffect(() => {\n    async function fetchProducts() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5050/productDB/productList/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const product = await response.json();\n      if (!product) {\n        window.alert(`Product with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setProdForm(product);\n    }\n    fetchProducts();\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateProdForm(value) {\n    return setProdForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  //Function for handling button press\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedProduct = {\n      productDesc: prodForm.productDesc,\n      productCat: prodForm.productCat\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5050/productDB/productList/${params.id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(editedProduct),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/productList\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crudCreateStyle\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"formStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"productDesc\",\n          children: \"Product: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"productDesc\",\n          value: prodForm.productDesc,\n          onChange: e => updateProdForm({\n            productDesc: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categoryDesc\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"categoryDesc\",\n          value: prodForm.categoryDesc,\n          onChange: e => updateForm({\n            categoryDesc: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), categoryList.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"capitalsList\",\n            value: category.categoryDesc,\n            children: category.categoryDesc\n          }, category.categoryDesc, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 4\n  }, this);\n}\n_s(EditProduct, \"TCgy4XUZ8NIBf7m1S/zTWji0wgo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditProduct;\nvar _c;\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","EditProduct","_s","prodForm","setProdForm","productDesc","productCat","product","params","navigate","categoryList","setCategoryList","fetchCategoryList","response","fetch","ok","categories","json","console","error","fetchProducts","id","toString","message","statusText","window","alert","updateProdForm","value","prev","onSubmit","e","preventDefault","editedProduct","method","body","JSON","stringify","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","target","categoryDesc","updateForm","map","category","_c","$RefreshReg$"],"sources":["C:/Users/dillo/Documents/CodingPC/HouseApp/client/src/components/productComp/editProduct.js"],"sourcesContent":["//Imports\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\n\r\n\r\n//Edit Stock Form Function\r\nexport default function EditProduct() {\r\n const [prodForm, setProdForm] = useState({\r\n   productDesc: \"\",\r\n   productCat: \"\",\r\n   product: [],\r\n });\r\n const params = useParams();\r\n const navigate = useNavigate();\r\n\r\n const [categoryList, setCategoryList] = useState([]);\r\n\r\n\r\n useEffect(() => {\r\n   async function fetchCategoryList() {\r\n     try {\r\n       const response = await fetch(\"http://localhost:5050/categoryDB/categoryList\");\r\n \r\n       if (response.ok) {\r\n         const categories = await response.json();\r\n         setCategoryList(categories);\r\n       } else {\r\n         console.error(\"Failed to fetch product list\");\r\n       }\r\n     } catch (error) {\r\n       console.error(\"An error occurred while fetching product list:\", error);\r\n     }\r\n   }\r\n \r\n   fetchCategoryList();\r\n }, []);\r\n\r\n//Retrieves InventoryItem from DB or return err\r\n useEffect(() => {\r\n   async function fetchProducts() {\r\n     const id = params.id.toString();\r\n     const response = await fetch(`http://localhost:5050/productDB/productList/${params.id.toString()}`);\r\n\r\n     if (!response.ok) {\r\n       const message = `An error has occurred: ${response.statusText}`;\r\n       window.alert(message);\r\n       return;\r\n     }\r\n\r\n     const product = await response.json();\r\n     if (!product) {\r\n       window.alert(`Product with id ${id} not found`);\r\n       navigate(\"/\");\r\n       return;\r\n     }\r\n\r\n     setProdForm(product);\r\n   }\r\n   fetchProducts();\r\n   return;\r\n }, [params.id, navigate]);\r\n\r\n // These methods will update the state properties.\r\n function updateProdForm(value) {\r\n   return setProdForm((prev) => {\r\n     return { ...prev, ...value };\r\n   });\r\n }\r\n//Function for handling button press\r\n async function onSubmit(e) {\r\n   e.preventDefault();\r\n   const editedProduct = {\r\n     productDesc: prodForm.productDesc,\r\n     productCat: prodForm.productCat,\r\n   };\r\n\r\n   // This will send a post request to update the data in the database.\r\n   await fetch(`http://localhost:5050/productDB/productList/${params.id}`, {\r\n     method: \"PATCH\",\r\n     body: JSON.stringify(editedProduct),\r\n     headers: {\r\n       'Content-Type': 'application/json'\r\n     },\r\n   });\r\n\r\n   navigate(\"/productList\");\r\n }\r\n\r\n // This following section will display the form that takes input from the user to update the data.\r\n return (\r\n   <div className=\"crudCreateStyle\">\r\n     <h3>Update Product</h3>\r\n     <form onSubmit={onSubmit} className=\"formStyle\">\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"productDesc\">Product: </label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"productDesc\"\r\n           value={prodForm.productDesc}\r\n           onChange={(e) => updateProdForm({ productDesc: e.target.value })}\r\n         />\r\n       </div>         \r\n       <div className=\"form-group\">\r\n          <label htmlFor=\"categoryDesc\">Select Category</label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"categoryDesc\"\r\n            value={prodForm.categoryDesc}\r\n            onChange={(e) => updateForm({ categoryDesc: e.target.value })}\r\n          >\r\n            <option value=\"\">Select a Category</option>\r\n            {categoryList.map(category => (\r\n              <option className=\"capitalsList\"key={category.categoryDesc} value={category.categoryDesc}>\r\n                {category.categoryDesc}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div> \r\n       <div className=\"form-group\">\r\n         <input\r\n           type=\"submit\"\r\n           value=\"Update\"\r\n           className=\"btn btn-primary\"\r\n         />\r\n       </div>\r\n     </form>\r\n   </div>\r\n );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}