{"ast":null,"code":"const searchProduct = () => {\n  fetch(`${API}/products`, {\n    method: 'GET'\n  }).then(response => response.json()).then(response => {\n    console.log(response);\n    setProducts(response);\n  }).catch(error => {\n    console.error(error);\n  });\n};\nasync function getAll(query) {\n  let products = await Product.find({}).lean();\n  if (query.search) {\n    products = products.filter(x => x.name.toLowerCase().includes(query.search));\n  }\n  return products;\n}","map":{"version":3,"names":["searchProduct","fetch","API","method","then","response","json","console","log","setProducts","catch","error","getAll","query","products","Product","find","lean","search","filter","x","name","toLowerCase","includes"],"sources":["C:/Users/dillo/Documents/CodingPC/HouseApp/client/src/components/search.js"],"sourcesContent":["\r\nconst searchProduct = () => {\r\n    fetch (`${API}/products`, {\r\n        method: 'GET',\r\n    })\r\n    .then (response => response.json ())\r\n    .then (response => {\r\n        console.log(response)\r\n        setProducts(response)\r\n    })\r\n    .catch (error => {\r\n        console.error (error);\r\n    });\r\n}\r\n\r\n\r\n\r\nasync function getAll(query) {\r\n    let products = await Product.find({}).lean()\r\n\r\n    if (query.search) {\r\n        products = products.filter(x => x.name.toLowerCase().includes(query.search))\r\n    }\r\n\r\n    return products;\r\n}"],"mappings":"AACA,MAAMA,aAAa,GAAGA,CAAA,KAAM;EACxBC,KAAK,CAAG,GAAEC,GAAI,WAAU,EAAE;IACtBC,MAAM,EAAE;EACZ,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAE,CAAC,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAI;IACfE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBI,WAAW,CAACJ,QAAQ,CAAC;EACzB,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAI;IACbJ,OAAO,CAACI,KAAK,CAAEA,KAAK,CAAC;EACzB,CAAC,CAAC;AACN,CAAC;AAID,eAAeC,MAAMA,CAACC,KAAK,EAAE;EACzB,IAAIC,QAAQ,GAAG,MAAMC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAE5C,IAAIJ,KAAK,CAACK,MAAM,EAAE;IACdJ,QAAQ,GAAGA,QAAQ,CAACK,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,KAAK,CAACK,MAAM,CAAC,CAAC;EAChF;EAEA,OAAOJ,QAAQ;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}