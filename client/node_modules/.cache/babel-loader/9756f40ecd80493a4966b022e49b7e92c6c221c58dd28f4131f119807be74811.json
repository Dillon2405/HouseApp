{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dillo\\\\Documents\\\\CodingPC\\\\HouseApp\\\\client\\\\src\\\\components\\\\productComp\\\\createProduct.js\",\n  _s = $RefreshSig$();\n//Imports\nimport React, { useState, useEffect } from \"react\";\n//import { useNavigate } from \"react-router\"; (1)\n\n//Create Stock Form Function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateProduct() {\n  _s();\n  const [prodForm, setForm] = useState({\n    productDesc: \"\",\n    categoryDesc: \"\"\n  });\n  //const navigate = useNavigate(); (1)\n\n  //Fetch category from DB\n  const [categoryList, setCategoryList] = useState([]);\n  useEffect(() => {\n    async function fetchCategoryList() {\n      try {\n        const response = await fetch(\"http://localhost:5050/categoryDB/categoryList\");\n        if (response.ok) {\n          const categories = await response.json();\n          setCategoryList(categories);\n        } else {\n          console.error(\"Failed to fetch product list\");\n        }\n      } catch (error) {\n        console.error(\"An error occurred while fetching product list:\", error);\n      }\n    }\n    fetchCategoryList();\n  }, []);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new stock to the database.\n    const newItem = {\n      ...prodForm\n    };\n    await fetch(\"http://localhost:5050/productDB/categoryList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newItem)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      productDesc: \"\",\n      categoryDesc: \"\"\n    });\n\n    // navigate(\"/\"); (1)\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crudCreateStyle\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"formStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"productDesc\",\n          children: \"Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"productDesc\",\n          value: prodForm.productDesc,\n          onChange: e => updateForm({\n            productDesc: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categoryDesc\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"categoryDesc\",\n          value: prodForm.categoryDesc,\n          onChange: e => updateForm({\n            categoryDesc: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), categoryList.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"capitalsList\",\n            value: category.categoryDesc,\n            children: category.categoryDesc\n          }, category.categoryDesc, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add Product\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 4\n  }, this);\n}\n_s(CreateProduct, \"tWHF4Qy7BiivMizGBRpPnxuOr/g=\");\n_c = CreateProduct;\nvar _c;\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CreateProduct","_s","prodForm","setForm","productDesc","categoryDesc","categoryList","setCategoryList","fetchCategoryList","response","fetch","ok","categories","json","console","error","updateForm","value","prev","onSubmit","e","preventDefault","newItem","method","headers","body","JSON","stringify","catch","window","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","target","map","category","_c","$RefreshReg$"],"sources":["C:/Users/dillo/Documents/CodingPC/HouseApp/client/src/components/productComp/createProduct.js"],"sourcesContent":["//Imports\r\nimport React, { useState, useEffect } from \"react\";\r\n//import { useNavigate } from \"react-router\"; (1)\r\n\r\n\r\n//Create Stock Form Function\r\nexport default function CreateProduct() {\r\n const [prodForm, setForm] = useState({\r\n   productDesc: \"\",\r\n   categoryDesc: \"\",\r\n });\r\n //const navigate = useNavigate(); (1)\r\n\r\n//Fetch category from DB\r\nconst [categoryList, setCategoryList] = useState([]);\r\n\r\n\r\nuseEffect(() => {\r\n  async function fetchCategoryList() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5050/categoryDB/categoryList\");\r\n\r\n      if (response.ok) {\r\n        const categories = await response.json();\r\n        setCategoryList(categories);\r\n      } else {\r\n        console.error(\"Failed to fetch product list\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred while fetching product list:\", error);\r\n    }\r\n  }\r\n\r\n  fetchCategoryList();\r\n}, []);\r\n\r\n\r\n // These methods will update the state properties.\r\n function updateForm(value) {\r\n   return setForm((prev) => {\r\n     return { ...prev, ...value };\r\n   });\r\n }\r\n\r\n // This function will handle the submission.\r\n async function onSubmit(e) {\r\n   e.preventDefault();\r\n\r\n   // When a post request is sent to the create url, we'll add a new stock to the database.\r\n   const newItem = { ...prodForm };\r\n\r\n   await fetch(\"http://localhost:5050/productDB/categoryList\", {\r\n     method: \"POST\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\",\r\n     },\r\n     body: JSON.stringify(newItem),\r\n   })\r\n   .catch(error => {\r\n     window.alert(error);\r\n     return;\r\n   });\r\n   setForm({ productDesc: \"\", categoryDesc: \"\"});\r\n\r\n// navigate(\"/\"); (1)\r\n  }\r\n\r\n // This following section will display the form that takes the input from the user.\r\n return (\r\n   <div className=\"crudCreateStyle\">\r\n     <h3>Create New Product</h3>\r\n     <form onSubmit={onSubmit} className=\"formStyle\">\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"productDesc\">Product</label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"productDesc\"\r\n           value={prodForm.productDesc}\r\n           onChange={(e) => updateForm({ productDesc: e.target.value })}\r\n         />\r\n       </div>    \r\n       <div className=\"form-group\">\r\n          <label htmlFor=\"categoryDesc\">Select Category</label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"categoryDesc\"\r\n            value={prodForm.categoryDesc}\r\n            onChange={(e) => updateForm({ categoryDesc: e.target.value })}\r\n          >\r\n            <option value=\"\">Select a Category</option>\r\n            {categoryList.map(category => (\r\n              <option className=\"capitalsList\"key={category.categoryDesc} value={category.categoryDesc}>\r\n                {category.categoryDesc}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div> \r\n        <div className=\"form-group\">\r\n         <input\r\n           type=\"submit\"\r\n           value=\"Add Product\"\r\n           className=\"btn btn-primary\"\r\n         />\r\n       </div>\r\n     </form>\r\n   </div>\r\n );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}