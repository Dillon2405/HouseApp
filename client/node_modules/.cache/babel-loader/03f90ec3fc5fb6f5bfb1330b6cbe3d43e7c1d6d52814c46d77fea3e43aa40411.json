{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dillo\\\\Documents\\\\CodingPC\\\\HouseApp\\\\client\\\\src\\\\components\\\\catComp\\\\createCategory.js\",\n  _s = $RefreshSig$();\n//Imports\nimport React, { useState } from \"react\";\n//import { useNavigate } from \"react-router\"; (1)\n\n//Create Stock Form Function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateCategory() {\n  _s();\n  const [categoryForm, setForm] = useState({\n    categoryDesc: \"\"\n  });\n  //const navigate = useNavigate(); (1)\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new stock to the database.\n    const newCategory = {\n      ...categoryForm\n    };\n    await fetch(\"http://localhost:5050/categoryDB/categoryList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newCategory)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      categoryDesc: \"\"\n    });\n\n    // navigate(\"/\"); (1)\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crudCreateStyle\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"formStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categoryDesc\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          className: \"form-control\",\n          id: \"categoryDesc\",\n          value: categoryForm.categoryDesc,\n          onChange: e => updateForm({\n            categoryDesc: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"submit\",\n          value: \"Add Category\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 4\n  }, this);\n}\n_s(CreateCategory, \"IZcBTQiU4uXXzEOVDSj4VX473Jo=\");\n_c = CreateCategory;\nvar _c;\n$RefreshReg$(_c, \"CreateCategory\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateCategory","_s","categoryForm","setForm","categoryDesc","updateForm","value","prev","onSubmit","e","preventDefault","newCategory","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","required","type","id","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/dillo/Documents/CodingPC/HouseApp/client/src/components/catComp/createCategory.js"],"sourcesContent":["//Imports\r\nimport React, { useState } from \"react\";\r\n//import { useNavigate } from \"react-router\"; (1)\r\n\r\n\r\n//Create Stock Form Function\r\nexport default function CreateCategory() {\r\n const [categoryForm, setForm] = useState({\r\n   categoryDesc: \"\",\r\n });\r\n //const navigate = useNavigate(); (1)\r\n\r\n // These methods will update the state properties.\r\n function updateForm(value) {\r\n   return setForm((prev) => {\r\n     return { ...prev, ...value };\r\n   });\r\n }\r\n\r\n // This function will handle the submission.\r\n async function onSubmit(e) {\r\n   e.preventDefault();\r\n\r\n   // When a post request is sent to the create url, we'll add a new stock to the database.\r\n   const newCategory = { ...categoryForm };\r\n\r\n   await fetch(\"http://localhost:5050/categoryDB/categoryList\", {\r\n     method: \"POST\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\",\r\n     },\r\n     body: JSON.stringify(newCategory),\r\n   })\r\n   .catch(error => {\r\n     window.alert(error);\r\n     return;\r\n   });\r\n   setForm({ categoryDesc: \"\"});\r\n\r\n// navigate(\"/\"); (1)\r\n  }\r\n\r\n // This following section will display the form that takes the input from the user.\r\n return (\r\n   <div className=\"crudCreateStyle\">\r\n     <h3>Create New Category</h3>\r\n     <form onSubmit={onSubmit} className=\"formStyle\">\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"categoryDesc\">Category</label>\r\n         <input\r\n         required\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"categoryDesc\"\r\n           value={categoryForm.categoryDesc}\r\n           onChange={(e) => updateForm({ categoryDesc: e.target.value })}\r\n         />\r\n       </div>    \r\n       <div className=\"form-group\">\r\n         <input\r\n         required\r\n           type=\"submit\"\r\n           value=\"Add Category\"\r\n           className=\"btn btn-primary\"\r\n         />\r\n       </div>\r\n     </form>\r\n   </div>\r\n );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,YAAY,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IACvCO,YAAY,EAAE;EAChB,CAAC,CAAC;EACF;;EAEA;EACA,SAASC,UAAUA,CAACC,KAAK,EAAE;IACzB,OAAOH,OAAO,CAAEI,IAAI,IAAK;MACvB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAGD;MAAM,CAAC;IAC9B,CAAC,CAAC;EACJ;;EAEA;EACA,eAAeE,QAAQA,CAACC,CAAC,EAAE;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,WAAW,GAAG;MAAE,GAAGT;IAAa,CAAC;IAEvC,MAAMU,KAAK,CAAC,+CAA+C,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW;IAClC,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;MACdC,MAAM,CAACC,KAAK,CAACF,KAAK,CAAC;MACnB;IACF,CAAC,CAAC;IACFhB,OAAO,CAAC;MAAEC,YAAY,EAAE;IAAE,CAAC,CAAC;;IAE/B;EACE;;EAED;EACA,oBACEL,OAAA;IAAKuB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BxB,OAAA;MAAAwB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B5B,OAAA;MAAMS,QAAQ,EAAEA,QAAS;MAACc,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC7CxB,OAAA;QAAKuB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBxB,OAAA;UAAO6B,OAAO,EAAC,cAAc;UAAAL,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9C5B,OAAA;UACA8B,QAAQ;UACNC,IAAI,EAAC,MAAM;UACXR,SAAS,EAAC,cAAc;UACxBS,EAAE,EAAC,cAAc;UACjBzB,KAAK,EAAEJ,YAAY,CAACE,YAAa;UACjC4B,QAAQ,EAAGvB,CAAC,IAAKJ,UAAU,CAAC;YAAED,YAAY,EAAEK,CAAC,CAACwB,MAAM,CAAC3B;UAAM,CAAC;QAAE;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5B,OAAA;QAAKuB,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzBxB,OAAA;UACA8B,QAAQ;UACNC,IAAI,EAAC,QAAQ;UACbxB,KAAK,EAAC,cAAc;UACpBgB,SAAS,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET;AAAC1B,EAAA,CA/DuBD,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}