{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dillo\\\\Documents\\\\CodingPC\\\\HouseApp\\\\client\\\\src\\\\components\\\\productComp\\\\editProduct.js\",\n  _s = $RefreshSig$();\n//Imports\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\n//Edit Stock Form Function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditProduct() {\n  _s();\n  const [prodForm, setProdForm] = useState({\n    productDesc: \"\",\n    productCat: \"\",\n    product: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  //Retrieves InventoryItem from DB or return err\n  useEffect(() => {\n    async function fetchProducts() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5050/productDB/productList/${params.id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const product = await response.json();\n      if (!product) {\n        window.alert(`Product with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setProdForm(product);\n    }\n    fetchProducts();\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateProdForm(value) {\n    return setProdForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  //Function for handling button press\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedProduct = {\n      productDesc: prodForm.productDesc,\n      productCat: prodForm.productCat\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5050/productDB/productList/${params.id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(editedProduct),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/productList\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crudCreateStyle\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"formStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"productDesc\",\n          children: \"Product: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"productDesc\",\n          value: prodForm.productDesc,\n          onChange: e => updateProdForm({\n            productDesc: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"prodCatOptions\",\n            id: \"prodCatDairy\",\n            value: \"Dairy\",\n            checked: prodForm.productCat === \"Dairy\",\n            onChange: e => updateProdForm({\n              productCat: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"categoryDairy\",\n            className: \"form-check-label\",\n            children: \"Dairy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"prodCatOptions\",\n            id: \"prodCatMeat\",\n            value: \"Meat\",\n            checked: prodForm.productCat === \"Meat\",\n            onChange: e => updateProdForm({\n              productCat: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"prodCatDairy\",\n            className: \"form-check-label\",\n            children: \"Meat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"prodCatOptions\",\n            id: \"prodCatVeg\",\n            value: \"Veg\",\n            checked: prodForm.productCat === \"Veg\",\n            onChange: e => updateProdForm({\n              productCat: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"prodCatVeg\",\n            className: \"form-check-label\",\n            children: \"Veg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 4\n  }, this);\n}\n_s(EditProduct, \"AB6Y/jdo1ogOv2rxYsBT5WL4JMQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditProduct;\nvar _c;\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","EditProduct","_s","prodForm","setProdForm","productDesc","productCat","product","params","navigate","fetchProducts","id","toString","response","fetch","ok","message","statusText","window","alert","json","updateProdForm","value","prev","onSubmit","e","preventDefault","editedProduct","method","body","JSON","stringify","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","target","name","checked","_c","$RefreshReg$"],"sources":["C:/Users/dillo/Documents/CodingPC/HouseApp/client/src/components/productComp/editProduct.js"],"sourcesContent":["//Imports\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\n\r\n\r\n//Edit Stock Form Function\r\nexport default function EditProduct() {\r\n const [prodForm, setProdForm] = useState({\r\n   productDesc: \"\",\r\n   productCat: \"\",\r\n   product: [],\r\n });\r\n const params = useParams();\r\n const navigate = useNavigate();\r\n\r\n//Retrieves InventoryItem from DB or return err\r\n useEffect(() => {\r\n   async function fetchProducts() {\r\n     const id = params.id.toString();\r\n     const response = await fetch(`http://localhost:5050/productDB/productList/${params.id.toString()}`);\r\n\r\n     if (!response.ok) {\r\n       const message = `An error has occurred: ${response.statusText}`;\r\n       window.alert(message);\r\n       return;\r\n     }\r\n\r\n     const product = await response.json();\r\n     if (!product) {\r\n       window.alert(`Product with id ${id} not found`);\r\n       navigate(\"/\");\r\n       return;\r\n     }\r\n\r\n     setProdForm(product);\r\n   }\r\n   fetchProducts();\r\n   return;\r\n }, [params.id, navigate]);\r\n\r\n // These methods will update the state properties.\r\n function updateProdForm(value) {\r\n   return setProdForm((prev) => {\r\n     return { ...prev, ...value };\r\n   });\r\n }\r\n//Function for handling button press\r\n async function onSubmit(e) {\r\n   e.preventDefault();\r\n   const editedProduct = {\r\n     productDesc: prodForm.productDesc,\r\n     productCat: prodForm.productCat,\r\n   };\r\n\r\n   // This will send a post request to update the data in the database.\r\n   await fetch(`http://localhost:5050/productDB/productList/${params.id}`, {\r\n     method: \"PATCH\",\r\n     body: JSON.stringify(editedProduct),\r\n     headers: {\r\n       'Content-Type': 'application/json'\r\n     },\r\n   });\r\n\r\n   navigate(\"/productList\");\r\n }\r\n\r\n // This following section will display the form that takes input from the user to update the data.\r\n return (\r\n   <div className=\"crudCreateStyle\">\r\n     <h3>Update Product</h3>\r\n     <form onSubmit={onSubmit} className=\"formStyle\">\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"productDesc\">Product: </label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"productDesc\"\r\n           value={prodForm.productDesc}\r\n           onChange={(e) => updateProdForm({ productDesc: e.target.value })}\r\n         />\r\n       </div>         \r\n       <div className=\"form-group\">\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"prodCatOptions\"\r\n             id=\"prodCatDairy\"\r\n             value=\"Dairy\"\r\n             checked={prodForm.productCat === \"Dairy\"}\r\n             onChange={(e) => updateProdForm({ productCat: e.target.value })}\r\n           />\r\n           <label htmlFor=\"categoryDairy\" className=\"form-check-label\">Dairy</label>\r\n         </div>\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"prodCatOptions\"\r\n             id=\"prodCatMeat\"\r\n             value=\"Meat\"\r\n             checked={prodForm.productCat === \"Meat\"}\r\n             onChange={(e) => updateProdForm({ productCat: e.target.value })}\r\n           />\r\n           <label htmlFor=\"prodCatDairy\" className=\"form-check-label\">Meat</label>\r\n         </div>\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"prodCatOptions\"\r\n             id=\"prodCatVeg\"\r\n             value=\"Veg\"\r\n             checked={prodForm.productCat === \"Veg\"}\r\n             onChange={(e) => updateProdForm({ productCat: e.target.value })}\r\n           />\r\n           <label htmlFor=\"prodCatVeg\" className=\"form-check-label\">Veg</label>\r\n         </div>\r\n       </div>\r\n       <br />\r\n\r\n       <div className=\"form-group\">\r\n         <input\r\n           type=\"submit\"\r\n           value=\"Update\"\r\n           className=\"btn btn-primary\"\r\n         />\r\n       </div>\r\n     </form>\r\n   </div>\r\n );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}