{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dillo\\\\Documents\\\\CodingPC\\\\HouseApp\\\\client\\\\src\\\\components\\\\stockComp\\\\create.js\",\n  _s = $RefreshSig$();\n//Imports\nimport React, { useState, useEffect } from \"react\";\n//import { useNavigate } from \"react-router\"; (1)\n\n//Create Stock Form Function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [form, setForm] = useState({\n    productDesc: \"\",\n    stockExp: \"\",\n    productCat: \"\",\n    stockQty: \"\"\n  });\n  //const navigate = useNavigate(); (1)\n\n  //Fetch products from DB\n  const [productList, setProductList] = useState([]);\n  useEffect(() => {\n    async function fetchProductList() {\n      try {\n        const response = await fetch(\"http://localhost:5050/productDB/productList\");\n        if (response.ok) {\n          const products = await response.json();\n          setProductList(products);\n        } else {\n          console.error(\"Failed to fetch product list\");\n        }\n      } catch (error) {\n        console.error(\"An error occurred while fetching product list:\", error);\n      }\n    }\n    fetchProductList();\n  }, []);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    if (value.productDesc) {\n      // Find the selected product in the productList\n      const selectedProduct = productList.find(product => product.productDesc === value.productDesc);\n\n      // Set the productCat based on the selected product\n      if (selectedProduct) {\n        value.productCat = selectedProduct.productCat;\n      }\n    }\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new stock to the database.\n    const newPerson = {\n      ...form\n    };\n    await fetch(\"http://localhost:5050/stockDB\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      productDesc: \"\",\n      stockExp: \"\",\n      productCat: \"\",\n      stockQty: \"\"\n    });\n    // navigate(\"/\"); (1)\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crudCreateStyle\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"formStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"productDesc\",\n          children: \"Select Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"productDesc\",\n          value: form.productDesc,\n          onChange: e => updateForm({\n            productDesc: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"dropCapStyle\",\n            value: \"\",\n            children: \"Select a product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), productList.map(product => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: product.productDesc,\n            children: product.productDesc\n          }, product.productDesc, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"stockQty\",\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"stockQty\",\n          value: form.stockQty,\n          onChange: e => updateForm({\n            stockQty: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"stockExp\",\n          children: \"Expiry/Best Before\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          id: \"stockExp\",\n          value: form.stockExp,\n          onChange: e => updateForm({\n            stockExp: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add stock\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 4\n  }, this);\n}\n_s(Create, \"W8YPwHNYlhcRK1hniZJVXhb9+3Q=\");\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Create","_s","form","setForm","productDesc","stockExp","productCat","stockQty","productList","setProductList","fetchProductList","response","fetch","ok","products","json","console","error","updateForm","value","selectedProduct","find","product","prev","onSubmit","e","preventDefault","newPerson","method","headers","body","JSON","stringify","catch","window","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","target","map","type","_c","$RefreshReg$"],"sources":["C:/Users/dillo/Documents/CodingPC/HouseApp/client/src/components/stockComp/create.js"],"sourcesContent":["//Imports\nimport React, { useState, useEffect  } from \"react\";\n//import { useNavigate } from \"react-router\"; (1)\n\n\n//Create Stock Form Function\nexport default function Create() {\n const [form, setForm] = useState({\n   productDesc: \"\",\n   stockExp: \"\",\n   productCat: \"\",\n   stockQty: \"\",\n });\n //const navigate = useNavigate(); (1)\n\n //Fetch products from DB\n const [productList, setProductList] = useState([]);\n\n useEffect(() => {\n   async function fetchProductList() {\n     try {\n       const response = await fetch(\"http://localhost:5050/productDB/productList\");\n\n       if (response.ok) {\n         const products = await response.json();\n         setProductList(products);\n       } else {\n         console.error(\"Failed to fetch product list\");\n       }\n     } catch (error) {\n       console.error(\"An error occurred while fetching product list:\", error);\n     }\n   }\n\n   fetchProductList();\n }, []);\n\n \n // These methods will update the state properties.\n function updateForm(value) {\n  if (value.productDesc) {\n    // Find the selected product in the productList\n    const selectedProduct = productList.find(\n      (product) => product.productDesc === value.productDesc\n    );\n\n    // Set the productCat based on the selected product\n    if (selectedProduct) {\n      value.productCat = selectedProduct.productCat;\n    }\n  }\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n\n // This function will handle the submission.\n async function onSubmit(e) {\n   e.preventDefault();\n\n   // When a post request is sent to the create url, we'll add a new stock to the database.\n   const newPerson = { ...form };\n\n   await fetch(\"http://localhost:5050/stockDB\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify(newPerson),\n   })\n   .catch(error => {\n     window.alert(error);\n     return;\n   });\n   setForm({ productDesc: \"\", stockExp: \"\", productCat: \"\", stockQty: \"\"});\n// navigate(\"/\"); (1)\n  }\n\n // This following section will display the form that takes the input from the user.\n return (\n   <div className=\"crudCreateStyle\">\n     <h3>Create New Stock</h3>\n     <form onSubmit={onSubmit} className=\"formStyle\">\n       <div className=\"form-group\">\n          <label htmlFor=\"productDesc\">Select Product</label>\n          <select\n            className=\"form-control\"\n            id=\"productDesc\"\n            value={form.productDesc}\n            onChange={(e) => updateForm({ productDesc: e.target.value })}\n          >\n            <option className=\"dropCapStyle\" value=\"\">Select a product</option>\n            {productList.map(product => (\n              <option key={product.productDesc} value={product.productDesc}>\n                {product.productDesc}\n              </option>\n            ))}\n          </select>\n        </div>   \n       <div className=\"form-group\">\n         <label htmlFor=\"stockQty\">Quantity</label>\n         <input\n           type=\"number\"\n           className=\"form-control\"\n           id=\"stockQty\"\n           value={form.stockQty}\n           onChange={(e) => updateForm({ stockQty: e.target.value })}\n         />\n       </div>       \n       <div className=\"form-group\">\n         <label htmlFor=\"stockExp\">Expiry/Best Before</label>\n         <input\n           type=\"date\"\n           className=\"form-control\"\n           id=\"stockExp\"\n           value={form.stockExp}\n           onChange={(e) => updateForm({ stockExp: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <input\n           type=\"submit\"\n           value=\"Add stock\"\n           className=\"btn btn-primary\"\n         />\n       </div>\n     </form>\n   </div>\n );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}